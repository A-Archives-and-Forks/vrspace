/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Animation from './model/Animation';
import Client from './model/Client';
import ContentCategory from './model/ContentCategory';
import GltfModel from './model/GltfModel';
import GroupMember from './model/GroupMember';
import LoginResponse from './model/LoginResponse';
import Point from './model/Point';
import Rotation from './model/Rotation';
import SceneProperties from './model/SceneProperties';
import UploadRequest from './model/UploadRequest';
import UserGroup from './model/UserGroup';
import VRObject from './model/VRObject';
import World from './model/World';
import WorldStatus from './model/WorldStatus';
import GroupControllerApi from './api/GroupControllerApi';
import Oauth2ControllerApi from './api/Oauth2ControllerApi';
import SeleniumControllerApi from './api/SeleniumControllerApi';
import SketchfabControllerApi from './api/SketchfabControllerApi';
import TextureControllerApi from './api/TextureControllerApi';
import UploadControllerApi from './api/UploadControllerApi';
import UserControllerApi from './api/UserControllerApi';
import WorldControllerApi from './api/WorldControllerApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var OpenApiDefinition = require('index'); // See note below*.
* var xxxSvc = new OpenApiDefinition.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new OpenApiDefinition.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new OpenApiDefinition.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new OpenApiDefinition.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Animation model constructor.
     * @property {module:model/Animation}
     */
    Animation,

    /**
     * The Client model constructor.
     * @property {module:model/Client}
     */
    Client,

    /**
     * The ContentCategory model constructor.
     * @property {module:model/ContentCategory}
     */
    ContentCategory,

    /**
     * The GltfModel model constructor.
     * @property {module:model/GltfModel}
     */
    GltfModel,

    /**
     * The GroupMember model constructor.
     * @property {module:model/GroupMember}
     */
    GroupMember,

    /**
     * The LoginResponse model constructor.
     * @property {module:model/LoginResponse}
     */
    LoginResponse,

    /**
     * The Point model constructor.
     * @property {module:model/Point}
     */
    Point,

    /**
     * The Rotation model constructor.
     * @property {module:model/Rotation}
     */
    Rotation,

    /**
     * The SceneProperties model constructor.
     * @property {module:model/SceneProperties}
     */
    SceneProperties,

    /**
     * The UploadRequest model constructor.
     * @property {module:model/UploadRequest}
     */
    UploadRequest,

    /**
     * The UserGroup model constructor.
     * @property {module:model/UserGroup}
     */
    UserGroup,

    /**
     * The VRObject model constructor.
     * @property {module:model/VRObject}
     */
    VRObject,

    /**
     * The World model constructor.
     * @property {module:model/World}
     */
    World,

    /**
     * The WorldStatus model constructor.
     * @property {module:model/WorldStatus}
     */
    WorldStatus,

    /**
    * The GroupControllerApi service constructor.
    * @property {module:api/GroupControllerApi}
    */
    GroupControllerApi,

    /**
    * The Oauth2ControllerApi service constructor.
    * @property {module:api/Oauth2ControllerApi}
    */
    Oauth2ControllerApi,

    /**
    * The SeleniumControllerApi service constructor.
    * @property {module:api/SeleniumControllerApi}
    */
    SeleniumControllerApi,

    /**
    * The SketchfabControllerApi service constructor.
    * @property {module:api/SketchfabControllerApi}
    */
    SketchfabControllerApi,

    /**
    * The TextureControllerApi service constructor.
    * @property {module:api/TextureControllerApi}
    */
    TextureControllerApi,

    /**
    * The UploadControllerApi service constructor.
    * @property {module:api/UploadControllerApi}
    */
    UploadControllerApi,

    /**
    * The UserControllerApi service constructor.
    * @property {module:api/UserControllerApi}
    */
    UserControllerApi,

    /**
    * The WorldControllerApi service constructor.
    * @property {module:api/WorldControllerApi}
    */
    WorldControllerApi
};
