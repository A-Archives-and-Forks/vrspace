/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import {ApiClient} from "../ApiClient.js";
import { CapabilitiesAndConfig } from '../model/CapabilitiesAndConfig.js';
import { ServerCapabilities } from '../model/ServerCapabilities.js';
import { ServerConfiguration } from '../model/ServerConfiguration.js';

/**
* ServerInfo service.
* @module api/ServerInfoApi
* @version v0
*/
export class ServerInfoApi {

    /**
    * Constructs a new ServerInfoApi. 
    * @alias module:api/ServerInfoApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * @return {Promise< ServerCapabilities >} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link ServerCapabilities} and HTTP response
     */
    getServerCapabilitiesWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = ServerCapabilities;
      return this.apiClient.callApi(
        '/vrspace/api/server-info/capabilities', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * @return {Promise< ServerCapabilities >} a {@link https://www.promisejs.org/|Promise}, with data of type {@link ServerCapabilities}
     */
    getServerCapabilities() {
      return this.getServerCapabilitiesWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * @return {Promise< ServerConfiguration >} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link ServerConfiguration} and HTTP response
     */
    getServerConfigWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = ServerConfiguration;
      return this.apiClient.callApi(
        '/vrspace/api/server-info/configuration', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * @return {Promise< ServerConfiguration >} a {@link https://www.promisejs.org/|Promise}, with data of type {@link ServerConfiguration}
     */
    getServerConfig() {
      return this.getServerConfigWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * @return {Promise< CapabilitiesAndConfig >} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link CapabilitiesAndConfig} and HTTP response
     */
    getServerInfoWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = CapabilitiesAndConfig;
      return this.apiClient.callApi(
        '/vrspace/api/server-info', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * @return {Promise< CapabilitiesAndConfig >} a {@link https://www.promisejs.org/|Promise}, with data of type {@link CapabilitiesAndConfig}
     */
    getServerInfo() {
      return this.getServerInfoWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
