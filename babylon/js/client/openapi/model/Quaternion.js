/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';

/**
 * The Quaternion model module.
 * @module model/Quaternion
 * @version v0
 */
export class Quaternion {
    /**
     * Constructs a new <code>Quaternion</code>.
     * @alias Quaternion
     */
    constructor() { 
        
        
        /** x 
         * @type {Number} 
         */
        this.x = undefined;

        /** y 
         * @type {Number} 
         */
        this.y = undefined;

        /** z 
         * @type {Number} 
         */
        this.z = undefined;

        /** w 
         * @type {Number} 
         */
        this.w = undefined;
        
        
        
        
        Quaternion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Quaternion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {Quaternion} obj Optional instance to populate.
     * @return {Quaternion} The populated <code>Quaternion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Quaternion();

            if (data.hasOwnProperty('x')) {
                obj['x'] = ApiClient.convertToType(data['x'], 'Number');
            }
            if (data.hasOwnProperty('y')) {
                obj['y'] = ApiClient.convertToType(data['y'], 'Number');
            }
            if (data.hasOwnProperty('z')) {
                obj['z'] = ApiClient.convertToType(data['z'], 'Number');
            }
            if (data.hasOwnProperty('w')) {
                obj['w'] = ApiClient.convertToType(data['w'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Quaternion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Quaternion</code>.
     */
    static validateJSON(data) {

        return true;
    }


}





export default Quaternion;

